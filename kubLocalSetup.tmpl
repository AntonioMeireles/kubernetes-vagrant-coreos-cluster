#!/bin/bash
set -e

PLATFORM="$(uname -s | tr '[:upper:]' '[:lower:]')"
KUBERNETES_VERSION=__KUBERNETES_VERSION__

KUB_URL="https://storage.googleapis.com/kubernetes-release/release/"
KUB_URL+="v${KUBERNETES_VERSION}/bin/${PLATFORM}/amd64/kubectl"

scream () {
    cat <<< "$@" 1>&2
    exit 1
}

case "$PLATFORM" in
  darwin|linux)
    targetDir="/usr/local/bin"
    ;;
  *)
    scream "Unknown or unsupported platform: ${PLATFORM}"
    ;;
esac

if [[ "$#" -eq 1 && "$1" == "install"  ]] ; then
  echo -n "Downloading and installing ${PLATFORM}'s' version of 'kubectl' "
  echo "(Kubernetes CLI, v__KUBERNETES_VERSION__) into ${targetDir}. "
  echo "(This may take a bit, depending on your internet connection speed)"

  [ -d ${targetDir} ] || sudo mkdir -p ${targetDir}
  [ -f ${targetDir}/kubectl ] && sudo rm -f ${targetDir}/kubectl
  sudo wget -q --no-check-certificate -L -O ${targetDir}/kubectl "${KUB_URL}"
  [ -x ${targetDir}/kubectl ] || sudo chmod +x ${targetDir}/kubectl
elif [[ "$#" -eq 1 && "$1" == "uninstall"  ]] ; then
  [ -f ${targetDir}/kubectl ] && sudo rm -f ${targetDir}/kubectl
elif [[ "$#" -eq 1 && "$1" == "shellinit"  ]] ; then
  if [[ ! -f ${targetDir}/kubectl ]]; then
    echo "echo 'kubectl' (kubernetes cli) wasn't found in your \$PATH."
    echo "Run './kubLocalSetup install' first."
    scream
  fi
  echo "export ETCDCTL_PEERS=http://__MASTER_IP__:2379"
  echo "export FLEETCTL_ENDPOINT=http://__MASTER_IP__:2379"
  echo "export KUBERNETES_MASTER=http://__MASTER_IP__:8080"
else
  echo "Usage: ./kubLocalSetup (install|shellinit|unistall)"
fi

